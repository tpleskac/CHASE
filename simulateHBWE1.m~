close all
clear
i = 1;
%the gamble
gambles(i).x = 4;
gambles(i).y = 0;
gambles(i).q = .8;
gambles(i).r_x = gambles(i).q;
gambles(i).r_y = 1; 
gambles(i).ev = gambles(i).q.*gambles(i).x + (1-gambles(i).q).*gambles(i).y; 
gambles(i).var = gambles(i).q.*(gambles(i).x-gambles(i).ev )^2 + (1-gambles(i).q).*(gambles(i).y-gambles(i).ev )^2;
gambles(i).sd = gambles(i).var.^.5;

%random certain equivalent
gambles(i).crand = 3;%gambles(i).ev.*.2.*rand + .1.*gambles(i).ev; %a random certaintye equivalent that is equally likely to be below to above

%simulate 1000 players with iCHASE

phiStar = 0; %criterion
pstay = .2; % going to set this at 0 and then move around. 
tau = 1; %standard deviation of start point
thresholdStar = 4; %threshold
alpha = 1; %exponent for utility function (power function)
gamma = 1.3; %sensitivity for prelec prob. weighting function


pars(1) = phiStar; %criterion
pars(2) = pstay; % going to set this at 0 and then move around. 
pars(3) = tau; %standard deviation of start point
pars(4) = thresholdStar; %threshold
pars(5) = alpha; %exponent for utility function (power function)
pars(6) = gamma; %sensitivity for prelec prob. weighting function


%binomial increments
[trialStats, summaryStats] = simiChaseWeightSingle(pars, gambles);
n = [trialStats.sampleSize];
theChoice = [trialStats.choice];
nA = n(theChoice==1);
nB = n(theChoice==0);
norder = sort(n);
nAorder = sort(nA);
nBorder = sort(nB);
%plot sample size distribution

edges = 1:norder(round(.99.*length(n)));
%edgesA = 1:nAorder(round(.99.*length(nA)));
%edgesB = 1:nBorder(round(.99.*length(nB)));

[PrBPrA] = CHASEchoice(summaryStats.Q, summaryStats.R,...
                       summaryStats.Z, summaryStats.I);
for j = 1:length(edges)                   
    PrTBPrTA(j,:) = CHASEsamplepdf(summaryStats.Q, summaryStats.R, ...
                            summaryStats.Z,edges(j), PrBPrA);
end;

PrT = PrTBPrTA*PrBPrA';

figure('Name','Binomial Samples')
subplot(3,1,1)
histogram([trialStats.sampleSize],edges,'Normalization','probability');
hold on
plot(edges,PrT(:,1),'r')

text(edges(round(length(edges)./2),max(PrT),...
    ['Sim Pr(H) = ' num2str(summaryStats.ChoiceProp) '; Sim E(n) =' num2str(summaryStats.meanSample)]);

title('Marginal Sample Size')
subplot(3,1,2)
histogram(nA,edges,'Normalization','probability');
hold on
plot(edges,PrTBPrTA(:,1),'r')
title('Sample Size Choose H')

subplot(3,1,3)

histogram(nB,edges,'Normalization','probability');
hold on
plot(edges,PrTBPrTA(:,2),'r')
title('Sample Size Choose L')


%matched continuous outcomes
[trialStats, summaryStats] = simiChaseWeightSingleCont(pars, gambles);
n = [trialStats.sampleSize];
theChoice = [trialStats.choice];
nA = n(theChoice==1);
nB = n(theChoice==0);
norder = sort(n);
nAorder = sort(nA);
nBorder = sort(nB);
%plot sample size distribution

edges = 1:norder(round(.99.*length(n)));
%edgesA = 1:nAorder(round(.99.*length(nA)));
%edgesB = 1:nBorder(round(.99.*length(nB)));

[PrBPrA] = CHASEchoice(summaryStats.Q, summaryStats.R,...
                       summaryStats.Z, summaryStats.I);
clear PrTBPrTA;
for j = 1:length(edges)                   
    PrTBPrTA(j,:) = CHASEsamplepdf(summaryStats.Q, summaryStats.R, ...
                            summaryStats.Z,edges(j), PrBPrA);
end;

PrT = PrTBPrTA*PrBPrA';

figure('Name','Matched Continuous Samples')
subplot(3,1,1)
histogram([trialStats.sampleSize],edges,'Normalization','probability');
hold on
plot(edges,PrT(:,1),'r')
title('Marginal Sample Size')
subplot(3,1,2)
histogram(nA,edges,'Normalization','probability');
hold on
plot(edges,PrTBPrTA(:,1),'r')
title('Sample Size Choose H')

subplot(3,1,3)

histogram(nB,edges,'Normalization','probability');
hold on
plot(edges,PrTBPrTA(:,2),'r')
title('Sample Size Choose L')